name: CD
# check cd flow for develop branch 
on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Environment
        id: set-env
        run: |
          if [[ "${GITHUB_REF}" == refs/heads/main ]]; then
            echo "env=dev" >> $GITHUB_OUTPUT
            echo "tag=dev-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "env=staging" >> $GITHUB_OUTPUT
            echo "tag=staging-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}          
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ steps.set-env.outputs.tag }}
          echo "Building and pushing $IMAGE"
          docker build -t $IMAGE .
          docker push $IMAGE
          
      - name: Set up kubectl
        run: |
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
          kubectl cluster-info

      - name: Update K8s Manifests with Image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ steps.set-env.outputs.tag }}
          kubectl create namespace ${{ steps.set-env.outputs.env }} --dry-run=client -o yaml | kubectl apply -f -
          for f in k8s/${{ steps.set-env.outputs.env }}/*.yaml; do
            sed "s|todo:.*|$IMAGE|g" $f | kubectl apply -n ${{ steps.set-env.outputs.env }} -f -
          done
